allprojects {
    group = 'nl.luukhermans'
    version = '1.0-SNAPSHOT'
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'jacoco'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    dependencies {
        compileOnly 'org.projectlombok:lombok:1.16.20'
        compile group: 'mysql', name: 'mysql-connector-java', version: '8.0.9-rc'
        compile group: 'org.eclipse.persistence', name: 'eclipselink', version: '2.5.1'
        compile group: 'org.eclipse.persistence', name: 'org.eclipse.persistence.jpa.modelgen.processor', version: '2.7.1'
        compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
        compile 'javax:javaee-api:8.0'
        testCompile group: 'junit', name: 'junit', version: '4.12'
        testCompile group: 'org.mockito', name: 'mockito-all', version: '1.10.19'
    }

    repositories {
        mavenCentral()
        mavenLocal()
    }

    test {
        reports.getJunitXml().setDestination(file("build/test-reports"))
    }

    sourceSets {
        integrationTest {
            java {
                compileClasspath += main.output + test.output
                runtimeClasspath += main.output + test.output
            }
        }
    }

    configurations {
        integrationTestCompile.extendsFrom testCompile
        integrationTestRuntime.extendsFrom testRuntime
    }

    task integrationTest(type: Test) {
        setTestClassesDirs(sourceSets.integrationTest.getOutput().getClassesDirs())
        setClasspath(sourceSets.integrationTest.getRuntimeClasspath())

        reports.getJunitXml().setDestination(file("build/integration-test-reports"))
    }

    //check.dependsOn integrationTest
    integrationTest.mustRunAfter test

    jacocoTestReport {
        reports {
            getXml().setEnabled(true)
            getCsv().setEnabled(false)
            getHtml().setEnabled(false)
        }
    }
}